{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstants\";\nimport { BaseURL } from \"../helper/BaseURL\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${BaseURL}/api/user/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${BaseURL}/api/user/register`, {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`${BaseURL}/api/user/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","BaseURL","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","updateProfile","user","getState","userLogin","userInfo","Authorization","token","put"],"sources":["C:/cyber-note-main/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\nimport { BaseURL } from \"../helper/BaseURL\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      `${BaseURL}/api/user/login`,\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      `${BaseURL}/api/user/register`,\n      { name, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `${BaseURL}/api/user/profile`,\n      user,\n      config\n    );\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}