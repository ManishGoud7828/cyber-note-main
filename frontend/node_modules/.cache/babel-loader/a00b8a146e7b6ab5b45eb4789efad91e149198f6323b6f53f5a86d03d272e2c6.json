{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { noteCreateReducer, noteDeleteReducer, noteListReducer, noteUpdateReducer } from \"./reducers/notesReducers\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteList: noteListReducer,\n  noteCrate: noteCreateReducer,\n  noteUpdate: noteUpdateReducer,\n  noteDelete: noteDeleteReducer,\n  userUpdate: userUpdateReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userUpdateReducer","noteCreateReducer","noteDeleteReducer","noteListReducer","noteUpdateReducer","reducer","userLogin","userRegister","noteList","noteCrate","noteUpdate","noteDelete","userUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"sources":["C:/cyber-note-main/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { noteCreateReducer, noteDeleteReducer, noteListReducer, noteUpdateReducer } from \"./reducers/notesReducers\";\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteList: noteListReducer,\n  noteCrate: noteCreateReducer,\n  noteUpdate: noteUpdateReducer,\n  noteDelete: noteDeleteReducer,\n  userUpdate: userUpdateReducer\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,iBAAiB,QAAQ,yBAAyB;AAClG,SAASC,iBAAiB,EAAEC,iBAAiB,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,0BAA0B;AAEnH,MAAMC,OAAO,GAAGX,eAAe,CAAC;EAC9BY,SAAS,EAAER,gBAAgB;EAC3BS,YAAY,EAAER,mBAAmB;EACjCS,QAAQ,EAAEL,eAAe;EACzBM,SAAS,EAAER,iBAAiB;EAC5BS,UAAU,EAAEN,iBAAiB;EAC7BO,UAAU,EAAET,iBAAiB;EAC7BU,UAAU,EAAEZ;AACd,CAAC,CAAC;AAEF,MAAMa,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMG,YAAY,GAAG;EACnBZ,SAAS,EAAE;IAAEa,QAAQ,EAAEN;EAAoB;AAC7C,CAAC;AAED,MAAMO,UAAU,GAAG,CAACxB,KAAK,CAAC;AAE1B,MAAMyB,KAAK,GAAG5B,WAAW,CACvBY,OAAO,EACPa,YAAY,EACZrB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,UAAU,CAAC,CAAC,CACpD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}