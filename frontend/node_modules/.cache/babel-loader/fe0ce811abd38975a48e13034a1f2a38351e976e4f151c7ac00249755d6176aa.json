{"ast":null,"code":"var _jsxFileName = \"C:\\\\cyber-note-main\\\\frontend\\\\src\\\\screens\\\\CreateNote\\\\CreateNote.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport { useNavigate } from \"react-router-dom\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateNote = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const dispatch = useDispatch();\n  const noteCrate = useSelector(state => state.noteCrate);\n  const {\n    loading,\n    error,\n    note\n  } = noteCrate;\n  const navigate = useNavigate();\n  const resetHandler = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setCategory(\"\");\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    if (!title || !content || !category) return;\n    dispatch(createNoteAction(title, content, category));\n    resetHandler();\n    navigate(\"/mynotes\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MainScreen, {\n      title: \"Create a Note\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"title\",\n              value: title,\n              placeholder: \"Enter a title\",\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: content,\n              placeholder: \"Enter the content\",\n              rows: 4,\n              onChange: e => setContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), content && /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"Note Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"content\",\n              value: category,\n              placeholder: \"Enter the category\",\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Create Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mx-2\",\n            onClick: resetHandler,\n            variant: \"danger\",\n            children: \"Reset Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          className: \"text-muted\",\n          children: [\"Creating on - \", new Date().toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateNote, \"OCHyoyrbAPNXo4vswiKCRoqjrXk=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = CreateNote;\nexport default CreateNote;\nvar _c;\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"names":["useState","Button","Card","Form","MainScreen","ReactMarkdown","useDispatch","useSelector","createNoteAction","useNavigate","ErrorMessage","Loading","jsxDEV","_jsxDEV","CreateNote","_s","title","setTitle","content","setContent","category","setCategory","dispatch","noteCrate","state","loading","error","note","navigate","resetHandler","submitHandler","e","preventDefault","children","onSubmit","variant","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","value","placeholder","onChange","target","as","rows","Header","Body","size","className","onClick","Footer","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/cyber-note-main/frontend/src/screens/CreateNote/CreateNote.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport { useNavigate } from \"react-router-dom\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\n\nconst CreateNote = () => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const noteCrate = useSelector((state) => state.noteCrate);\n  const { loading, error, note } = noteCrate;\n\n  const navigate = useNavigate();\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setCategory(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!title || !content || !category) return;\n    dispatch(createNoteAction(title, content, category));\n\n    resetHandler();\n    navigate(\"/mynotes\");\n  };\n\n  return (\n    <div>\n      <MainScreen title=\"Create a Note\">\n        <Card>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={title}\n                placeholder=\"Enter a title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={content}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n\n            {content && (\n              <Card>\n                <Card.Header>Note Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={category}\n                placeholder=\"Enter the category\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Note\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Fields\n            </Button>\n          </Form>\n          <Card.Footer className=\"text-muted\">\n            Creating on - {new Date().toLocaleDateString()}\n          </Card.Footer>\n        </Card>\n      </MainScreen>\n    </div>\n  );\n};\nexport default CreateNote;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}